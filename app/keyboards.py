from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardMarkup, \
    InlineKeyboardButton, Update
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –∞ –Ω–µ –≤—Å–µ –¥–ª—è —Ä–∞–±–∞—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏–∑ –ë–î
from app.database.requests import get_roles
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–ª–¥–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
from aiogram.utils.keyboard import InlineKeyboardBuilder
#–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–æ–∫
from Texts import (Buttons)

main = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text=Buttons.FIO)],
    [KeyboardButton(text=Buttons.CONTACTS)],
    [KeyboardButton(text=Buttons.PHOTO),
    KeyboardButton(text=Buttons.CHECK)]],
    resize_keyboard=True,
    input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –∫—É–¥–∞ –≤–µ—Ä–Ω—É—Ç—Å—è...')

getphoto = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text=Buttons.FINISH_UPLOAD,)]],
                            resize_keyboard=True)

back_cancel = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text=Buttons.BACK, callback_data='back'),
    InlineKeyboardButton(text=Buttons.CANCEL, callback_data='cancel')]
])

fio = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ù–∞ —Ä—É—Å—Å–∫–æ–º', callback_data='ru')],
    [InlineKeyboardButton(text='–ù–∞  –∞–Ω–≥–ª–∏–π—Å–∫–æ–º', callback_data='en')],
    [InlineKeyboardButton(text=Buttons.CHECK, callback_data='check')]])

get_tel = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä',
                    request_contact=True)]],
                    resize_keyboard=True, one_time_keyboard=True)

proverka = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text=Buttons.YES, callback_data='yes')],
    [InlineKeyboardButton(text=Buttons.NO, callback_data='no')]])

edit = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –≤–∞—à–µ –∏–º—è RU', callback_data='RU')],
    [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –≤–∞—à–µ –∏–º—è EN', callback_data='EN')],
    [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω', callback_data='phone')],
    [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –≤–∞—à–∏ –∏–Ω–∏—Ü–∏–∞–ª—ã', callback_data='idn')],
    [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã', callback_data='contact')],
    [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –≤–∞—à—É —Ä–æ–ª—å', callback_data='role')],
    [InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–∫ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='yes')]])

cancel = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text=Buttons.YES, callback_data='yes')],
    [InlineKeyboardButton(text=Buttons.NO, callback_data='no')]])


    # ------------------------------------------------------------------------------------------------------------------
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è–º–∏
    # ------------------------------------------------------------------------------------------------------------------


# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ä–æ—è–º–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
async def roles():
    all_roles = await get_roles()
    keyboard = InlineKeyboardBuilder()
# –î–æ—Å—Ç–∞–ª–∏ –≤—Å–µ —Ä–æ–ª–∏ –∏ –∏—Ç–µ—Ä–∏—Ä—É–µ–º –∏—Ö
    for role in all_roles:
#       –ü–µ—Ä–µ–¥–∞—á–∞ –≤ callback_data roles_1-2-3-4...
#       keyboard.add(InlineKeyboardButton(text=role.name, callback_data=f"roles_{role.id}"))
        keyboard.add(InlineKeyboardButton(text=role.name, callback_data=role.name))
        # print(InlineKeyboardButton(text=role.name, callback_data=role.name))
    return keyboard.adjust(2).as_markup()


# –ö–Ω–æ–ø–∫–∞ –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏–∏, –≤ –∫–æ—Ç–æ—Ä—É—é –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Å–ª–æ–≤–∞—Ä—å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –º–µ—Å—Ç–∞ –≥–¥–µ –µ—ë –≤—ã–∑—ã–≤–∞—é—Ç
async def edit_item(
        *,
        btns: dict[str, str],
        sizes: tuple[int] = (2,)):

        keydoard = InlineKeyboardBuilder()

        for text, data in btns.items():
            keydoard.add(InlineKeyboardButton(text=text, callback_data=data))
        return keydoard.adjust(*sizes).as_markup()


def create_task_keyboard(row: int, col: int, code: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–¥–∞—á–∏ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    :param row: –ù–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ
    :param col: –ù–æ–º–µ—Ä –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ
    """
    builder = InlineKeyboardBuilder()
    builder.button(text=Buttons.DONE, callback_data=f"done:{row}:{col}")
    builder.button(text=Buttons.CANCEL, callback_data=f"cancel:{row}:{col}")
    builder.button(text=Buttons.CODE.format(code), callback_data=f"code:{row}:{col}")
    builder.button(text=Buttons.ERROR, callback_data=f"error:{row}:{col}")

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫: –ø–µ—Ä–≤—ã–µ –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, —Ç—Ä–µ—Ç—å—è ‚Äî –≤ –¥—Ä—É–≥–æ–π
    builder.adjust(2, 1, 1)
    return builder.as_markup()

# edit_item = InlineKeyboardMarkup(inline_keyboard=[
#     [InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data='del')],
#     [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å', callback_data='edit')]])

# –°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —É–¥–∞–ª—è—Ç—å –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –≤ –æ—Ç–≤–µ—Ç–µ –±–æ—Ç–∞:
