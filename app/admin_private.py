

from aiogram import F, Router, types, Bot
from aiogram.exceptions import TelegramBadRequest
from aiogram.filters import Command
from aiogram.types import CallbackQuery

from app.Filters.chat_types import ChatTypeFilter, IsAdmin  # –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏ –Ω–∞—à–∏ –ª–∏—á–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
import app.keyboards as kb
import app.database.requests as rq

admin_router = Router()
admin_router.message.filter(ChatTypeFilter(["private"]), IsAdmin())

@admin_router.message(Command("admin"))
async def admin_keyboard(message: types.Message):
    await message.answer("—Ç–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω–∫—É", reply_markup=kb.admin)


#–í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É
@admin_router.message(F.text == "–ú–æ–∂–Ω–æ –≤—Å–µ—Ö –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å")
async def view_all_items(message: types.Message):
    for item in await rq.get_item():
        try:
            await message.answer_document(document=item.serial1,
                                          caption=f'ü™™ –§–ò–û ru: {item.nameRU}\n'
                                                  f'ü™™ –§–ò–û en: {item.nameEN}\n'
                                                  f'ü™™ –ò–Ω–∏—Ü–∏–∞–ª—ã: {item.idn}\n'
                                                  f'üì´ –ö–æ–Ω—Ç–∞–∫—Ç—ã: {item.mailcontact}\n'
                                                  f'‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω: {item.tel}\n'
                                                  f'ü™Ü –†–æ–ª—å: {item.role}',
                                          protect_content=True,
                                          reply_markup=await kb.edit_item(btns={
                                              '–£–¥–∞–ª–∏—Ç—å': f'delete_{item.id}',
                                              '–ò–∑–º–µ–Ω–∏—Ç—å': f'change_{item.id}'})
                                          )
            # –∑–∞–ø–∏—Å—å –ø—Ä–æ—Å—Ç–æ –≤ —è—á–µ–π–∫—É
            # sh.wks.update([[f'{item.nameRU}',f'{item.nameEN}',f'{item.idn}',f'{item.mailcontact}',f'{item.tel}',f'{item.role}']], 'A2')
            # –∑–∞–ø–∏—Å—å –ø—Ä–æ—Å—Ç–æ –≤ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–≤–æ–±–æ–¥–Ω—É—é —è—á–µ–π–∫—É,–Ω–æ —è—á–µ–π–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ–µ—Ç–∞, –Ω—É–∂–Ω–æ –ø–æ—Ö–æ–∂–µ –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–µ–ª–∞—Ç—å
            # await sh.update([[f'{item.nameRU}',f'{item.nameEN}',f'{item.idn}',f'{item.mailcontact}',f'{item.tel}',f'{item.role}']], "A{}".format(sh.next_row))

        except TelegramBadRequest:
            await message.answer(text=f'ü™™ –§–ò–û ru: {item.nameRU}\n'
                                      f'ü™™ –§–ò–û en: {item.nameEN}\n'
                                      f'ü™™ –ò–Ω–∏—Ü–∏–∞–ª—ã: {item.idn}\n'
                                      f'üì´ –ö–æ–Ω—Ç–∞–∫—Ç—ã: {item.mailcontact}\n'
                                      f'‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω: {item.tel}\n'
                                      f'ü™Ü –†–æ–ª—å: {item.role}',
                                 protect_content=True,
                                 message_effect_id="5046589136895476101",
                                 reply_markup=await kb.edit_item(btns={
                                     'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å': f'delete_{item.id}',
                                     '‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å': f'change_{item.id}'}))
            # –∑–∞–ø–∏—Å—å –ø—Ä–æ—Å—Ç–æ –≤ —è—á–µ–π–∫—É
            # sh.wks.update([[f'{item.nameRU}',f'{item.nameEN}',f'{item.idn}',f'{item.mailcontact}',f'{item.tel}',f'{item.role}']], 'A2')
            # –∑–∞–ø–∏—Å—å –ø—Ä–æ—Å—Ç–æ –≤ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–≤–æ–±–æ–¥–Ω—É—é —è—á–µ–π–∫—É,–Ω–æ —è—á–µ–π–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ–µ—Ç–∞, –Ω—É–∂–Ω–æ –ø–æ—Ö–æ–∂–µ –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–µ–ª–∞—Ç—å
            # await fu.number_row(item)
            # await fu.sh.update([[f'{item.nameRU}',f'{item.nameEN}',f'{item.idn}',f'{item.mailcontact}',f'{item.tel}',f'{item.role}']], "A{}".format(sh.next_row))

    await message.answer("–í–æ—Ç –≤—Å–µ, –ª—é–±—É–π—Å—è")

#–õ–æ–≤–∏–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –ø–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—é
@admin_router.callback_query(F.data.startswith('delete_'))
async def delete_item(callback: CallbackQuery):
    item_id = callback.data.split("_")[-1]
    await  rq.del_item(int(item_id))
    await callback.answer(text=f'–ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞')
    await callback.message.answer(text=f'–ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞')