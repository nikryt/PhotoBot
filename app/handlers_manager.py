import os
import app.Sheets.function as fu
from aiogram import Router, F
from aiogram.types import CallbackQuery
from dotenv import load_dotenv

manager_router = Router()
load_dotenv()
TABLE_NAME_M = str(os.getenv('TABLE_NAME_MANAGER'))
TABLE_NAME_P = str(os.getenv('TABLE_NAME_SHEDULE_PUBLIC'))
LIST_NAME = str(os.getenv('NAME_LIST_MANAGER_PHOTO'))


@manager_router.callback_query(F.data.in_({"tables_photo", "tables_shedule"}))
async def handle_table_callback(callback: CallbackQuery):
    try:
        if callback.data == "tables_photo":
            # –î–ª—è —Ç–∞–±–ª–∏—Ü—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞: —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ª–∏—Å—Ç
            url = await fu.get_sheet_url(
                spreadsheet_name=TABLE_NAME_M,
                include_sheet=True
            )
            text = "üìå –¢–∞–±–ª–∏—Ü–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤"

        elif callback.data == "tables_shedule":
            # –î–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: –æ–±—â–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É
            url = await fu.get_sheet_url(
                spreadsheet_name=TABLE_NAME_P,
                sheet_name=LIST_NAME,
                include_sheet=False
            )
            text = "üìÖ –ü—É–±–ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–≤"

        await callback.message.answer(f"{text}:\n{url}")

    except Exception as e:
        await callback.message.answer("üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã")
        print(f"Error: {e}")

    await callback.answer()